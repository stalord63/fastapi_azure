name: Build, Push Docker Image, and Deploy to AKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ACR_NAME: stalordtest
  IMAGE_NAME: fastapiapp
  AKS_CLUSTER_NAME: stalordaks      # Replace with your AKS cluster name
  AKS_RESOURCE_GROUP: stalordrg     # Replace with your AKS resource group
  CONTAINER_PORT: 8080

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: |
          az acr login --name $ACR_NAME

      - name: Build and push Docker image to ACR
        run: |
          IMAGE_TAG=${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${{ github.sha }}
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG
        env:
          DOCKER_BUILDKIT: 1
  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group $AKS_RESOURCE_GROUP --name $AKS_CLUSTER_NAME

      - name: Deploy to AKS using kubectl
        run: |
          IMAGE=${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${{ github.sha }}

          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl set image deployment/fastapi-deployment fastapi=$IMAGE
